package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"net/url"
	"time"
)
//xác thực theo phương pháp Client Credentials Grant để lấy AccessToken từ Azure AD bằng Golang,
func main() {
	// Thay thế các giá trị sau bằng thông tin ứng dụng và Azure AD của bạn
	clientID := "e240abd3-62fa-4378-ae24-9e92f078fc63"
	clientSecret := "ZSs8Q~nT6zvm19CIE72shXSp-sHelDFYSsz43cBJ"
	tenantID := "f8cdef31-a31e-4b4a-93e4-5f571e91255a"

	// Tạo URL token endpoint của Azure AD
	tokenURL := fmt.Sprintf("https://login.microsoftonline.com/%s/oauth2/token", tenantID)

	// Tạo một HTTP client
	client := http.Client{
		Timeout: time.Second * 10,
	}

	// Tạo dữ liệu xác thực
	data := url.Values{}
	data.Set("grant_type", "client_credentials")
	data.Set("client_id", clientID)
	data.Set("client_secret", clientSecret)
	data.Set("scope", "https://graph.microsoft.com/.default") // Điều này thường là URL tài nguyên bạn muốn truy cập

	// Tạo yêu cầu POST
	req, err := http.NewRequest("POST", tokenURL, bytes.NewBufferString(data.Encode()))
	if err != nil {
		fmt.Println("Failed to create HTTP request:", err)
		return
	}

	// Thiết lập tiêu đề yêu cầu
	req.Header.Add("Content-Type", "application/x-www-form-urlencoded")

	// Gửi yêu cầu
	resp, err := client.Do(req)
	if err != nil {
		fmt.Println("Failed to send HTTP request:", err)
		return
	}
	defer resp.Body.Close()

	// Đọc phản hồi
	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		fmt.Println("Failed to read response:", err)
		return
	}

	// Kiểm tra mã trạng thái HTTP
	if resp.StatusCode != http.StatusOK {
		fmt.Printf("Failed to get access token. Status code: %d\n", resp.StatusCode)
		fmt.Println(string(body))
		return
	}

	// Phân tích JSON phản hồi để lấy AccessToken
	var tokenResponse map[string]interface{}
	if err := json.Unmarshal(body, &tokenResponse); err != nil {
		fmt.Println("Failed to parse JSON response:", err)
		return
	}

	accessToken, ok := tokenResponse["access_token"].(string)
	if !ok {
		fmt.Println("Access token not found in response.")
		return
	}

	fmt.Println("Access Token:", accessToken)
}
